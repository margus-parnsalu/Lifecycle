{% extends "base.jinja2" %}
{% block content %}

{% from 'querysorter_m.jinja2' import qsorter with context %}

<style type="text/css">
.popover{
    max-width: 100%; /* Max Width of the popover*/
}
</style>

<script>
    // Init Bootstyrap PopOver
    $(function () { $('[data-toggle="popover"]').popover() });
</script>


<h3>HPSD Internal Application CI-d</h3>


<div class="well">
    <div class="row">


        <div class="col-md-3">
            <label for="searchInput">Filter</label>
            <br>
            <input id="searchInput"
                   placeholder="Type for filtering page results. _ for multiple matches"
                   class="form-control input-sm">
        </div>
    </div>
</div>



<table class="table table-hover" style="table-layout: fixed; word-wrap: break-word;">
    <thead>
    <tr>
        <th style="width:4%">Nr</th>
        <th style="width:20%">{{ qsorter('ci_codes_view', 'Code', 'code') }}</th>
        <th style="width:15%">{{ qsorter('ci_codes_view', 'System Id', 'system_id') }}</th>
        <th style="width:15%">{{ qsorter('ci_codes_view', 'Name', 'name') }}</th>
        <th style="width:10%">{{ qsorter('ci_codes_view', 'Owner', 'owner') }}</th>
        <th style="width:30%">Remark</th>
        <th style="width:15%">Performers</th>
    </tr>
    <tbody id="fbody">
    {% for ci in sdcis: %}
    <tr>
        <td>
            {{ loop.index }}
        </td>

        <td>
            {{ ci.code  or '' }}
        </td>
        <td>
            {{ ci.system_id or ''}}
        </td>
        <td>
            {{ ci.name or '' }}
        </td>
        <td>
            {{ ci.owner or ''}}
        </td>
        <td>
            {{ ci.remark or '' }}
        </td>
        <td>
            1:{{ ci.performer1 or '' }}<br>2:{{ ci.performer2 or '' }}
        </td>

    </tr>


    {% endfor %}
    </tbody>
</table>

<script>
    // Filter result rows
    jQuery.expr[":"].Contains = jQuery.expr.createPseudo(function(arg) {
        return function( elem ) {
            return jQuery(elem).text().toUpperCase().indexOf(arg.toUpperCase()) >= 0;
            };
        });
    $("#searchInput").keyup(function () {
        var rows = $("#fbody").find("tr").hide();
        if (this.value.length) {
            var data = this.value.split("_");
            $.each(data, function (i, v) {
                rows.filter(":Contains('" + v + "')").show();
            });
        } else rows.show();
    });
</script>

{% endblock %}